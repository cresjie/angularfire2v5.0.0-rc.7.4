{"version":3,"file":"database.js","sourceRoot":"","sources":["../../../src/database/database.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAGlF,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AAGjC,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAC9D,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAClE,OAAO,EAAE,iBAAiB,EAAE,eAAe,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,MAAM,cAAc,CAAC;;IAOjI,6BAC6B,QACU,MACI,aACpB,YACrB,IAAY;QAEZ,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAqB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACrC,IAAM,GAAG,GAAG,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC9C,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,IAAI,SAAS,CAAC,CAAC;SAC/C,CAAC,CAAC;KACJ;IAED,kCAAI,GAAJ,UAAQ,SAAwB,EAAE,OAAiB;QACjD,IAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC7C,IAAI,KAAK,GAAkB,GAAG,CAAC;QAC/B,EAAE,CAAA,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;SACtB;QACD,MAAM,CAAC,mBAAmB,CAAI,KAAK,EAAE,IAAI,CAAC,CAAC;KAC5C;IAED,oCAAM,GAAN,UAAU,SAAwB;QAChC,IAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC7C,MAAM,CAAC,qBAAqB,CAAI,GAAG,EAAE,IAAI,CAAC,CAAC;KAC5C;IAED,0CAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;KACvC;;gBAnCF,UAAU;;;gDAMN,MAAM,SAAC,iBAAiB;gDACxB,QAAQ,YAAI,MAAM,SAAC,eAAe;gDAClC,QAAQ,YAAI,MAAM,SAAC,mBAAmB;6CACtC,MAAM,SAAC,WAAW;gBAnBgB,MAAM;;8BAA7C;;SAWa,mBAAmB;AAqDhC,OAAO,EAAE,mBAAmB,EAAE,CAAC","sourcesContent":["import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\r\nimport { FirebaseDatabase } from '@firebase/database-types';\r\nimport { PathReference, DatabaseQuery, DatabaseReference, DatabaseSnapshot, ChildEvent, ListenEvent, QueryFn, AngularFireList, AngularFireObject } from './interfaces';\r\nimport { getRef } from './utils';\r\nimport { InjectionToken } from '@angular/core';\r\nimport { FirebaseOptions } from '@firebase/app-types';\r\nimport { createListReference } from './list/create-reference';\r\nimport { createObjectReference } from './object/create-reference';\r\nimport { FirebaseAppConfig, FirebaseAppName, RealtimeDatabaseURL, _firebaseAppFactory, FirebaseZoneScheduler } from 'angularfire2';\r\n\r\n@Injectable()\r\nexport class AngularFireDatabase {\r\n  public readonly database: FirebaseDatabase;\r\n  public readonly scheduler: FirebaseZoneScheduler;\r\n\r\n  constructor(\r\n    @Inject(FirebaseAppConfig) config:FirebaseOptions,\r\n    @Optional() @Inject(FirebaseAppName) name:string,\r\n    @Optional() @Inject(RealtimeDatabaseURL) databaseURL:string,\r\n    @Inject(PLATFORM_ID) platformId: Object,\r\n    zone: NgZone\r\n  ) {\r\n    this.scheduler = new FirebaseZoneScheduler(zone, platformId);\r\n    this.database = zone.runOutsideAngular(() => {\r\n      const app = _firebaseAppFactory(config, name);\r\n      return app.database(databaseURL || undefined);\r\n    });\r\n  }\r\n\r\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\r\n    const ref = getRef(this.database, pathOrRef);\r\n    let query: DatabaseQuery = ref;\r\n    if(queryFn) {\r\n      query = queryFn(ref);\r\n    }\r\n    return createListReference<T>(query, this);\r\n  }\r\n\r\n  object<T>(pathOrRef: PathReference): AngularFireObject<T>  {\r\n    const ref = getRef(this.database, pathOrRef);\r\n    return createObjectReference<T>(ref, this);\r\n  }\r\n\r\n  createPushId() {\r\n    return this.database.ref().push().key;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  PathReference,\r\n  DatabaseQuery,\r\n  DatabaseReference,\r\n  DatabaseSnapshot,\r\n  ChildEvent,\r\n  ListenEvent,\r\n  QueryFn,\r\n  AngularFireList,\r\n  AngularFireObject,\r\n  AngularFireAction,\r\n  Action,\r\n  SnapshotAction\r\n} from './interfaces';\r\n\r\nexport { RealtimeDatabaseURL };"]}