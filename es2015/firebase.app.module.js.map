{"version":3,"file":"firebase.app.module.js","sourceRoot":"","sources":["../../../src/core/firebase.app.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAA0B,QAAQ,EAAE,MAAM,eAAe,CAAC;AAEjE,OAAO,EAAE,iBAAiB,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AAEpE,OAAO,QAAQ,MAAM,eAAe,CAAC;AAQrC,MAAM;CAUL;AAED,MAAM,8BAA8B,MAAuB,EAAE,IAAa;IACtE,MAAM,OAAO,GAAG,IAAI,IAAI,WAAW,CAAC;IACpC,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAgB,CAAC;IACvF,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,CAAgB,CAAC;CAChF;AAED,MAAM,mBAAmB,GAAG;IACxB,OAAO,EAAE,WAAW;IACpB,UAAU,EAAE,mBAAmB;IAC/B,IAAI,EAAE,CAAE,iBAAiB,EAAE,eAAe,CAAE;CAC/C,CAAC;AAKF,MAAM;IACF,MAAM,CAAC,aAAa,CAAC,MAAuB,EAAE,OAAgB;QAC1D,MAAM,CAAC;YACH,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACP,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE;gBAChD,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,EAAE;aAClD;SACJ,CAAA;KACJ;;;YAZJ,QAAQ,SAAC;gBACN,SAAS,EAAE,CAAE,mBAAmB,CAAE;aACrC","sourcesContent":["import { InjectionToken, NgZone, NgModule } from '@angular/core';\r\n\r\nimport { FirebaseAppConfig, FirebaseAppName } from './angularfire2';\r\n\r\nimport firebase from '@firebase/app';\r\nimport { FirebaseApp as _FirebaseApp, FirebaseOptions } from '@firebase/app-types';\r\nimport { FirebaseAuth } from '@firebase/auth-types';\r\nimport { FirebaseDatabase } from '@firebase/database-types';\r\nimport { FirebaseMessaging } from '@firebase/messaging-types';\r\nimport { FirebaseStorage } from '@firebase/storage-types';\r\nimport { FirebaseFirestore } from '@firebase/firestore-types';\r\n\r\nexport class FirebaseApp implements _FirebaseApp {\r\n    name: string;\r\n    automaticDataCollectionEnabled: boolean;\r\n    options: {};\r\n    auth: () => FirebaseAuth;\r\n    database: (databaseURL?: string) => FirebaseDatabase;\r\n    messaging: () => FirebaseMessaging;\r\n    storage: (storageBucket?: string) => FirebaseStorage;\r\n    delete: () => Promise<void>;\r\n    firestore: () => FirebaseFirestore;\r\n}\r\n\r\nexport function _firebaseAppFactory(config: FirebaseOptions, name?: string): FirebaseApp {\r\n    const appName = name || '[DEFAULT]';\r\n    const existingApp = firebase.apps.filter(app => app.name == appName)[0] as FirebaseApp;\r\n    return existingApp || firebase.initializeApp(config, appName) as FirebaseApp;\r\n}\r\n\r\nconst FirebaseAppProvider = {\r\n    provide: FirebaseApp,\r\n    useFactory: _firebaseAppFactory,\r\n    deps: [ FirebaseAppConfig, FirebaseAppName ]\r\n};\r\n \r\n@NgModule({\r\n    providers: [ FirebaseAppProvider ],\r\n})\r\nexport class AngularFireModule {\r\n    static initializeApp(config: FirebaseOptions, appName?: string) {\r\n        return {\r\n            ngModule: AngularFireModule,\r\n            providers: [\r\n                { provide: FirebaseAppConfig, useValue: config },\r\n                { provide: FirebaseAppName, useValue: appName }\r\n            ]\r\n        }\r\n    }\r\n}\r\n"]}