{"version":3,"file":"angularfire2.js","sourceRoot":"","sources":["../../../src/core/angularfire2.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAU,MAAM,eAAe,CAAC;AACvD,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAC7C,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAOnD,OAAO,yBAAyB,CAAC;AAEjC,MAAM,CAAC,MAAM,eAAe,GAAG,IAAI,cAAc,CAAS,sBAAsB,CAAC,CAAC;AAClF,MAAM,CAAC,MAAM,iBAAiB,GAAG,IAAI,cAAc,CAAkB,qBAAqB,CAAC,CAAC;AAG5F,MAAM,CAAC,MAAM,mBAAmB,GAAG,IAAI,cAAc,CAAS,kCAAkC,CAAC,CAAC;AAElG,MAAM;IACJ,YAAmB,IAAY,EAAU,UAAkB;QAAxC,SAAI,GAAJ,IAAI,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAQ;KAAI;IAC/D,QAAQ,CAAC,GAAG,IAAW;QACrB,MAAM,CAAe,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAa,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA,EAAC,CAAC,CAAC;KACnG;IAED,sBAAsB,CAAI,IAAmB;QAC3C,EAAE,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,UAAU,CAAI,UAAU;gBACjC,MAAM,IAAI,GAAG,SAAQ,CAAC;gBACtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACvF,IAAI,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAC/E,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aACnC,CAAC,CAAC;SACJ;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;SACb;KACF;IACD,iBAAiB,CAAI,IAAmB;QACtC,MAAM,CAAC,IAAI,UAAU,CAAI,UAAU;YACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,SAAS,CACnB,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EACpD,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EACrD,MAAS,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,UAAU,CAAC,QAAQ,EAAE,CAAC,CACpD,CAAC;aACH,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;CACF","sourcesContent":["import { InjectionToken, NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { queue } from 'rxjs/scheduler/queue';\r\nimport { isPlatformServer } from '@angular/common';\r\nimport { observeOn } from 'rxjs/operator/observeOn';\r\n\r\nimport firebase from '@firebase/app';\r\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\r\n\r\n\r\nimport 'rxjs/add/operator/first';\r\n\r\nexport const FirebaseAppName = new InjectionToken<string>('angularfire2.appName');\r\nexport const FirebaseAppConfig = new InjectionToken<FirebaseOptions>('angularfire2.config');\r\n\r\n// Put in database.ts when we drop database-depreciated\r\nexport const RealtimeDatabaseURL = new InjectionToken<string>('angularfire2.realtimeDatabaseURL');\r\n\r\nexport class FirebaseZoneScheduler {\r\n  constructor(public zone: NgZone, private platformId: Object) {}\r\n  schedule(...args: any[]): Subscription {\r\n    return <Subscription>this.zone.runGuarded(function() { return queue.schedule.apply(queue, args)});\r\n  }\r\n  // TODO this is a hack, clean it up\r\n  keepUnstableUntilFirst<T>(obs$: Observable<T>) {\r\n    if (isPlatformServer(this.platformId)) {\r\n      return new Observable<T>(subscriber => {\r\n        const noop = () => {};\r\n        const task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\r\n        obs$.first().subscribe(() => this.zone.runOutsideAngular(() => task.invoke()));\r\n        return obs$.subscribe(subscriber);\r\n      });\r\n    } else {\r\n      return obs$;\r\n    }\r\n  }\r\n  runOutsideAngular<T>(obs$: Observable<T>): Observable<T> {\r\n    return new Observable<T>(subscriber => {\r\n      return this.zone.runOutsideAngular(() => {\r\n        return obs$.subscribe(\r\n          value => this.zone.run(() => subscriber.next(value)),\r\n          error => this.zone.run(() => subscriber.error(error)),\r\n          ()    => this.zone.run(() => subscriber.complete()),\r\n        );\r\n      });\r\n    });\r\n  }\r\n}"]}