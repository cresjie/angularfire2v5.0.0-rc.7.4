{"version":3,"file":"ref.js","sourceRoot":"","sources":["../../../../src/storage/ref.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAyB,MAAM,QAAQ,CAAC;AAEjE,OAAO,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAC;AAkB5C,MAAM,2BAA2B,GAAc,EAAE,SAAgC;IAC/E,MAAM,CAAC;QACL,cAAc,EAAE,MAAM,SAAS,CAAC,sBAAsB,CACpD,SAAS,CAAC,iBAAiB,CACzB,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAC3B,CACF;QACD,WAAW,EAAE,MAAM,SAAS,CAAC,sBAAsB,CACjD,SAAS,CAAC,iBAAiB,CACzB,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CACxB,CACF;QACD,MAAM,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAChC,KAAK,EAAE,CAAC,IAAY,KAAK,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC;QACrE,eAAe,EAAE,CAAC,IAAsB,KAAK,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3E,GAAG,EAAE,CAAC,IAAS,EAAE,QAAyB;YACxC,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACrC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,SAAS,EAAE,CAAC,IAAY,EAAE,MAAqB,EAAE,QAAyB;YACxE,MAAM,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;YACnD,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC/B;KACF,CAAC;CACH","sourcesContent":["import { SettableMetadata, UploadMetadata, Reference, StringFormat } from '@firebase/storage-types';\r\nimport { createUploadTask, AngularFireUploadTask } from './task';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { from } from 'rxjs/observable/from';\r\nimport { FirebaseZoneScheduler } from 'angularfire2';\r\n\r\nexport interface AngularFireStorageReference {\r\n  getDownloadURL(): Observable<any>;\r\n  getMetadata(): Observable<any>;\r\n  delete(): Observable<any>;\r\n  child(path: string): any;\r\n  updateMetatdata(meta: SettableMetadata): Observable<any>;\r\n  put(data: any, metadata?: UploadMetadata | undefined): AngularFireUploadTask;\r\n  putString(data: string, format?: string | undefined, metadata?: UploadMetadata | undefined): AngularFireUploadTask;\r\n}\r\n\r\n/**\r\n * Create an AngularFire wrapped Storage Reference. This object\r\n * creates observable methods from promise based methods.\r\n * @param ref\r\n */\r\nexport function createStorageRef(ref: Reference, scheduler: FirebaseZoneScheduler): AngularFireStorageReference {\r\n  return {\r\n    getDownloadURL: () => scheduler.keepUnstableUntilFirst(\r\n      scheduler.runOutsideAngular(\r\n        from(ref.getDownloadURL())\r\n      )\r\n    ),\r\n    getMetadata: () => scheduler.keepUnstableUntilFirst(\r\n      scheduler.runOutsideAngular(\r\n        from(ref.getMetadata())\r\n      )\r\n    ),\r\n    delete: () => from(ref.delete()),\r\n    child: (path: string) => createStorageRef(ref.child(path), scheduler),\r\n    updateMetatdata: (meta: SettableMetadata) => from(ref.updateMetadata(meta)),\r\n    put: (data: any, metadata?: UploadMetadata) => {\r\n      const task = ref.put(data, metadata);\r\n      return createUploadTask(task);\r\n    },\r\n    putString: (data: string, format?: StringFormat, metadata?: UploadMetadata) => {\r\n      const task = ref.putString(data, format, metadata);\r\n      return createUploadTask(task);\r\n    }\r\n  };\r\n}\r\n"]}