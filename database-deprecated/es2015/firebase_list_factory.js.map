{"version":3,"file":"firebase_list_factory.js","sourceRoot":"","sources":["../../../../src/database-deprecated/firebase_list_factory.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgZone } from '@angular/core';\r\nimport * as database from '@firebase/database-types';\r\nimport { FirebaseZoneScheduler } from 'angularfire2';\r\nimport * as utils from './utils';\r\nimport { AFUnwrappedDataSnapshot } from './interfaces';\r\nimport { FirebaseListObservable } from './firebase_list_observable';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { observeOn } from 'rxjs/operator/observeOn';\r\nimport { observeQuery } from './query_observable';\r\nimport { Query, FirebaseListFactoryOpts, DatabaseReference, DatabaseQuery, DatabaseSnapshot } from './interfaces';\r\nimport { switchMap } from 'rxjs/operator/switchMap';\r\nimport { map } from 'rxjs/operator/map';\r\n\r\nexport function FirebaseListFactory (\r\n  ref: DatabaseReference,\r\n  { preserveSnapshot, query = {} } :FirebaseListFactoryOpts = {}): FirebaseListObservable<any> {\r\n\r\n  if (utils.isEmptyObject(query)) {\r\n    return firebaseListObservable(ref, { preserveSnapshot });\r\n  }\r\n\r\n  const queryObs = observeQuery(query);\r\n  return new FirebaseListObservable(ref, subscriber => {\r\n    let sub = switchMap.call(map.call(queryObs, query => {\r\n      let queried: DatabaseQuery = ref;\r\n      // Only apply the populated keys\r\n      // apply ordering and available querying options\r\n      // eg: ref.orderByChild('height').startAt(3)\r\n      // Check orderBy\r\n      if (query.orderByChild) {\r\n        queried = queried.orderByChild(query.orderByChild);\r\n      } else if (query.orderByKey) {\r\n        queried = queried.orderByKey();\r\n      } else if (query.orderByPriority) {\r\n        queried = queried.orderByPriority();\r\n      } else if (query.orderByValue) {\r\n        queried = queried.orderByValue();\r\n      }\r\n\r\n      // check equalTo\r\n      if (utils.hasKey(query, \"equalTo\")) {\r\n        if (utils.hasKey(query.equalTo, \"value\")) {\r\n          queried = queried.equalTo(query.equalTo.value, query.equalTo.key);\r\n        } else {\r\n          queried = queried.equalTo(query.equalTo);\r\n        }\r\n\r\n        if (utils.hasKey(query, \"startAt\") || utils.hasKey(query, \"endAt\")) {\r\n          throw new Error('Query Error: Cannot use startAt or endAt with equalTo.');\r\n        }\r\n\r\n        // apply limitTos\r\n        if (!utils.isNil(query.limitToFirst)) {\r\n          queried = queried.limitToFirst(query.limitToFirst);\r\n        }\r\n\r\n        if (!utils.isNil(query.limitToLast)) {\r\n          queried = queried.limitToLast(query.limitToLast);\r\n        }\r\n\r\n        return queried;\r\n      }\r\n\r\n      // check startAt\r\n      if (utils.hasKey(query, \"startAt\")) {\r\n        if (utils.hasKey(query.startAt, \"value\")) {\r\n          queried = queried.startAt(query.startAt.value, query.startAt.key);\r\n        } else {\r\n          queried = queried.startAt(query.startAt);\r\n        }\r\n      }\r\n\r\n      if (utils.hasKey(query, \"endAt\")) {\r\n        if (utils.hasKey(query.endAt, \"value\")) {\r\n          queried = queried.endAt(query.endAt.value, query.endAt.key);\r\n        } else {\r\n          queried = queried.endAt(query.endAt);\r\n        }\r\n      }\r\n\r\n      if (!utils.isNil(query.limitToFirst) && query.limitToLast) {\r\n        throw new Error('Query Error: Cannot use limitToFirst with limitToLast.');\r\n      }\r\n\r\n      // apply limitTos\r\n      if (!utils.isNil(query.limitToFirst)) {\r\n          queried = queried.limitToFirst(query.limitToFirst);\r\n      }\r\n\r\n      if (!utils.isNil(query.limitToLast)) {\r\n          queried = queried.limitToLast(query.limitToLast);\r\n      }\r\n\r\n      return queried;\r\n    }), (queryRef: database.Reference, ix: number) => {\r\n      return firebaseListObservable(queryRef, { preserveSnapshot });\r\n    })\r\n    .subscribe(subscriber);\r\n\r\n    return () => sub.unsubscribe();\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a FirebaseListObservable from a reference or query. Options can be provided as a second\r\n * parameter. This function understands the nuances of the Firebase SDK event ordering and other\r\n * quirks. This function takes into account that not all .on() callbacks are guaranteed to be\r\n * asynchonous. It creates a initial array from a promise of ref.once('value'), and then starts\r\n * listening to child events. When the initial array is loaded, the observable starts emitting values.\r\n */\r\nfunction firebaseListObservable(ref: database.Reference | DatabaseQuery, {preserveSnapshot}: FirebaseListFactoryOpts = {}): FirebaseListObservable<any> {\r\n\r\n  const toValue = preserveSnapshot ? (snapshot => snapshot) : utils.unwrapMapFn;\r\n  const toKey = preserveSnapshot ? (value => value.key) : (value => value.$key);\r\n\r\n  const listObs = new FirebaseListObservable(ref, (obs: Observer<any>) => {\r\n\r\n    // Keep track of callback handles for calling ref.off(event, handle)\r\n    const handles: { event: string, handle: (a: DatabaseSnapshot, b?: string | null | undefined) => any }[] = [];\r\n    let hasLoaded = false;\r\n    let lastLoadedKey: string = null!;\r\n    let array: DatabaseSnapshot[] = [];\r\n\r\n    // The list children are always added to, removed from and changed within\r\n    // the array using the child_added/removed/changed events. The value event\r\n    // is only used to determine when the initial load is complete.\r\n\r\n    ref.once('value', (snap: any) => {\r\n      if (snap.exists()) {\r\n        snap.forEach((child: any) => {\r\n          lastLoadedKey = child.key;\r\n        });\r\n        if (array.find((child: any) => toKey(child) === lastLoadedKey)) {\r\n          hasLoaded = true;\r\n          obs.next(array);\r\n        }\r\n      } else {\r\n        hasLoaded = true;\r\n        obs.next(array);\r\n      }\r\n    }, err => {\r\n      if (err) { obs.error(err); obs.complete(); }\r\n    });\r\n\r\n    const addFn = ref.on('child_added', (child: any, prevKey: string) => {\r\n      array = onChildAdded(array, toValue(child), toKey, prevKey);\r\n      if (hasLoaded) {\r\n        obs.next(array);\r\n      } else if (child.key === lastLoadedKey) {\r\n        hasLoaded = true;\r\n        obs.next(array);\r\n      }\r\n    }, err => {\r\n      if (err) { obs.error(err); obs.complete(); }\r\n    });\r\n    handles.push({ event: 'child_added', handle: addFn });\r\n\r\n    let remFn = ref.on('child_removed', (child: any) => {\r\n      array = onChildRemoved(array, toValue(child), toKey);\r\n      if (hasLoaded) {\r\n        obs.next(array);\r\n      }\r\n    }, err => {\r\n      if (err) { obs.error(err); obs.complete(); }\r\n    });\r\n    handles.push({ event: 'child_removed', handle: remFn });\r\n\r\n    let chgFn = ref.on('child_changed', (child: any, prevKey: string) => {\r\n      array = onChildChanged(array, toValue(child), toKey, prevKey);\r\n      if (hasLoaded) {\r\n        obs.next(array);\r\n      }\r\n    }, err => {\r\n      if (err) { obs.error(err); obs.complete(); }\r\n    });\r\n    handles.push({ event: 'child_changed', handle: chgFn });\r\n\r\n    return () => {\r\n      // Loop through callback handles and dispose of each event with handle\r\n      // The Firebase SDK requires the reference, event name, and callback to\r\n      // properly unsubscribe, otherwise it can affect other subscriptions.\r\n      handles.forEach(item => {\r\n        ref.off(item.event, item.handle);\r\n      });\r\n    };\r\n\r\n  });\r\n\r\n  // TODO: should be in the subscription zone instead\r\n  return observeOn.call(listObs, new FirebaseZoneScheduler(new NgZone({}), {}));\r\n\r\n}\r\n\r\nexport function onChildAdded(arr:any[], child:any, toKey:(element:any)=>string, prevKey:string): any[] {\r\n  if (!arr.length) {\r\n    return [child];\r\n  }\r\n  return arr.reduce((accumulator: DatabaseSnapshot[], curr: DatabaseSnapshot, i:number) => {\r\n    if (!prevKey && i===0) {\r\n      accumulator.push(child);\r\n    }\r\n    accumulator.push(curr);\r\n    if (prevKey && prevKey === toKey(curr)) {\r\n      accumulator.push(child);\r\n    }\r\n    return accumulator;\r\n  }, []);\r\n}\r\n\r\nexport function onChildChanged(arr:any[], child:any, toKey:(element:any)=>string, prevKey:string): any[] {\r\n  const childKey = toKey(child);\r\n  return arr.reduce((accumulator:any[], val:any, i:number) => {\r\n    const valKey = toKey(val);\r\n    if (!prevKey && i==0) {\r\n      accumulator.push(child);\r\n      if (valKey !== childKey) {\r\n        accumulator.push(val);\r\n      }\r\n    } else if(valKey === prevKey) {\r\n      accumulator.push(val);\r\n      accumulator.push(child);\r\n    } else if (valKey !== childKey) {\r\n      accumulator.push(val);\r\n    }\r\n    return accumulator;\r\n  }, []);\r\n}\r\n\r\nexport function onChildRemoved(arr:any[], child:any, toKey:(element:any)=>string): any[] {\r\n  let childKey = toKey(child);\r\n  return arr.filter(c => toKey(c) !== childKey);\r\n}\r\n\r\nexport function onChildUpdated(arr:any[], child:any, toKey:(element:any)=>string, prevKey:string): any[] {\r\n  return arr.map((v, i, arr) => {\r\n    if(!prevKey && !i) {\r\n      return child;\r\n    } else if (i > 0 && toKey(arr[i-1]) === prevKey) {\r\n      return child;\r\n    } else {\r\n      return v;\r\n    }\r\n  });\r\n}\r\n"]}