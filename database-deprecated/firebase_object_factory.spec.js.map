{"version":3,"file":"firebase_object_factory.spec.js","sourceRoot":"","sources":["../../../src/database-deprecated/firebase_object_factory.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { FirebaseApp as FBApp } from '@firebase/app-types';\r\nimport { Reference } from '@firebase/database-types';\r\nimport { Subscription } from 'rxjs';\r\nimport { FirebaseApp, FirebaseAppConfig, AngularFireModule } from 'angularfire2';\r\nimport { AngularFireDatabase, AngularFireDatabaseModule, FirebaseObjectObservable, FirebaseObjectFactory } from 'angularfire2/database-deprecated';\r\nimport { TestBed, inject } from '@angular/core/testing';\r\nimport { COMMON_CONFIG } from './test-config';\r\n\r\ndescribe('FirebaseObjectFactory', () => {\r\n  let i = 0;\r\n  let ref: Reference;\r\n  let observable: FirebaseObjectObservable<any>;\r\n  let subscription: Subscription;\r\n  let nextSpy: jasmine.Spy;\r\n  let app: FBApp;\r\n  let db: AngularFireDatabase;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [\r\n        AngularFireModule.initializeApp(COMMON_CONFIG, '[DEFAULT]'),\r\n        AngularFireDatabaseModule\r\n      ]\r\n    });\r\n    inject([FirebaseApp, AngularFireDatabase], (app_: FirebaseApp, _db: AngularFireDatabase) => {\r\n      app = app_;\r\n      db = _db;\r\n    })();\r\n  });\r\n\r\n  afterEach(done => {\r\n    app.delete().then(done, done.fail);\r\n  });\r\n\r\n  describe('<constructor>', () => {\r\n\r\n    it('should accept a Firebase db ref in the constructor', () => {\r\n      const object = FirebaseObjectFactory(app.database().ref().child(`questions`));\r\n      expect(object instanceof FirebaseObjectObservable).toBe(true);\r\n    });\r\n\r\n  });\r\n\r\n  describe('methods', () => {\r\n\r\n    beforeEach((done: any) => {\r\n      i = Date.now();\r\n      ref = app.database().ref().child(`questions/${i}`);\r\n      nextSpy = nextSpy = jasmine.createSpy('next');\r\n      observable = FirebaseObjectFactory(app.database().ref(`questions/${i}`));\r\n      ref.remove(done);\r\n    });\r\n\r\n    afterEach(() => {\r\n      if (subscription && !subscription.closed) {\r\n        subscription.unsubscribe();\r\n      }\r\n    });\r\n\r\n\r\n    it('should emit a null value if no value is present when subscribed', (done: any) => {\r\n      subscription = observable.subscribe(unwrapped => {\r\n        const expectedObject = { $key: (<any>observable).$ref.key, $value: null };\r\n        expect(unwrapped.$key).toEqual(expectedObject.$key);\r\n        expect(unwrapped.$value).toEqual(expectedObject.$value);\r\n        expect(unwrapped.$exists()).toEqual(false);\r\n        done();\r\n      });\r\n    });\r\n\r\n\r\n    it('should emit unwrapped data by default', (done: any) => {\r\n      const fixtureData = { data: 'bar' };\r\n      ref.set(fixtureData, () => {\r\n        subscription = observable.subscribe(unwrapped => {\r\n          if (!unwrapped) return;\r\n          expect(unwrapped.$key).toEqual(ref.key);\r\n          expect(unwrapped).toEqual(fixtureData);\r\n          expect(unwrapped.$exists()).toEqual(true);\r\n          done();\r\n        });\r\n      });\r\n    });\r\n\r\n   it('should emit unwrapped data with $ properties for primitive values', (done: any) => {\r\n      ref.set('fiiiireeee', () => {\r\n        subscription = observable.subscribe(val => {\r\n          if (!val) return;\r\n          expect(val.$key).toEqual(ref.key);\r\n          expect(val.$value).toEqual('fiiiireeee');\r\n          expect(val.$exists()).toEqual(true);\r\n          done();\r\n        });\r\n      });\r\n    });\r\n\r\n   it('should emit null for $ properties for primitive values', (done: any) => {\r\n     subscription = observable.subscribe(val => {\r\n       if (!val) return;\r\n       expect(val.$key).toEqual(ref.key);\r\n       expect(val.$value).toEqual(null);\r\n       expect(val.$exists()).toEqual(false);\r\n       done();\r\n     });\r\n    });\r\n\r\n    it('should emit snapshots if preserveSnapshot option is true', (done: any) => {\r\n      observable = FirebaseObjectFactory(app.database().ref(`questions/${i}`), { preserveSnapshot: true });\r\n      ref.remove(() => {\r\n        ref.set('preserved snapshot!', () => {\r\n          subscription = observable.subscribe(data => {\r\n            expect(data.val()).toEqual('preserved snapshot!');\r\n            done();\r\n          });\r\n        });\r\n      })\r\n    });\r\n\r\n\r\n    it('should call off on all events when disposed', () => {\r\n      const dbRef = app.database().ref();\r\n      let firebaseSpy = spyOn(dbRef, 'off');\r\n      subscription = FirebaseObjectFactory(dbRef).subscribe();\r\n      expect(firebaseSpy).not.toHaveBeenCalled();\r\n      subscription.unsubscribe();\r\n      expect(firebaseSpy).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should emit values in the observable creation zone', (done: any) => {\r\n      Zone.current.fork({\r\n        name: 'newZone'\r\n      })\r\n      .run(() => {\r\n        // Creating a new observable so that the current zone is captured.\r\n        subscription = FirebaseObjectFactory(app.database().ref(`questions/${i}`))\r\n          .filter(d => d.$value === 'in-the-zone')\r\n          .subscribe(data => {\r\n            expect(Zone.current.name).toBe('newZone');\r\n            done();\r\n          });\r\n      });\r\n\r\n      ref.remove(() => {\r\n        ref.set('in-the-zone');\r\n      });\r\n    });\r\n  });\r\n});\r\n"]}