{"version":3,"file":"auth.spec.js","sourceRoot":"","sources":["../../../src/auth/auth.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { User } from '@firebase/auth-types';\r\nimport { ReflectiveInjector, Provider } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable'\r\nimport { Subject } from 'rxjs/Subject'\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { TestBed, inject } from '@angular/core/testing';\r\nimport { _do } from 'rxjs/operator/do';\r\nimport { take } from 'rxjs/operator/take';\r\nimport { skip } from 'rxjs/operator/skip';\r\nimport { FirebaseApp, FirebaseAppConfig, AngularFireModule, FirebaseAppName } from 'angularfire2';\r\nimport { AngularFireAuth, AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { COMMON_CONFIG } from './test-config';\r\n\r\nfunction authTake(auth: Observable<any>, count: number): Observable<any> {\r\n  return take.call(auth, 1);\r\n}\r\n\r\nfunction authSkip(auth: Observable<any>, count: number): Observable<any> {\r\n  return skip.call(auth, 1);\r\n}\r\n\r\nconst firebaseUser = <User> {\r\n  uid: '12345',\r\n  providerData: [{ displayName: 'jeffbcrossyface' }]\r\n};\r\n\r\ndescribe('AngularFireAuth', () => {\r\n  let app: FirebaseApp;\r\n  let afAuth: AngularFireAuth;\r\n  let authSpy: jasmine.Spy;\r\n  let mockAuthState: Subject<User>;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [\r\n        AngularFireModule.initializeApp(COMMON_CONFIG),\r\n        AngularFireAuthModule\r\n      ]\r\n    });\r\n    inject([FirebaseApp, AngularFireAuth], (app_: FirebaseApp, _auth: AngularFireAuth) => {\r\n      app = app_;\r\n      afAuth = _auth;\r\n    })();\r\n\r\n    mockAuthState = new Subject<User>();\r\n    spyOn(afAuth, 'authState').and.returnValue(mockAuthState);\r\n    spyOn(afAuth, 'idToken').and.returnValue(mockAuthState);\r\n    afAuth.authState = mockAuthState as Observable<User>;\r\n    afAuth.idToken = mockAuthState as Observable<User>;\r\n  });\r\n\r\n  afterEach(done => {\r\n    afAuth.auth.app.delete().then(done, done.fail);\r\n  });\r\n\r\n  describe('Zones', () => {\r\n    it('should call operators and subscriber in the same zone as when service was initialized', (done) => {\r\n      // Initialize the app outside of the zone, to mimick real life behavior.\r\n      let ngZone = Zone.current.fork({\r\n        name: 'ngZone'\r\n      });\r\n      ngZone.run(() => {\r\n        const subs = [\r\n          afAuth.authState.subscribe(user => {\r\n            expect(Zone.current.name).toBe('ngZone');\r\n            done();\r\n          }, done.fail),\r\n          afAuth.authState.subscribe(user => {\r\n            expect(Zone.current.name).toBe('ngZone');\r\n            done();\r\n          }, done.fail)\r\n        ];\r\n        mockAuthState.next(firebaseUser);\r\n        subs.forEach(s => s.unsubscribe());\r\n      });\r\n    });\r\n  });\r\n\r\n  it('should be exist', () => {\r\n    expect(afAuth instanceof AngularFireAuth).toBe(true);\r\n  });\r\n\r\n  it('should have the Firebase Auth instance', () => {\r\n    expect(afAuth.auth).toBeDefined();\r\n  });\r\n\r\n  it('should have an initialized Firebase app', () => {\r\n    expect(afAuth.auth.app).toBeDefined();\r\n    expect(afAuth.auth.app).toEqual(app);\r\n  });\r\n\r\n  it('should emit auth updates through authState', (done: any) => {\r\n    let count = 0;\r\n\r\n    // Check that the first value is null and second is the auth user\r\n    const subs = afAuth.authState.subscribe(user => {\r\n      if (count === 0) {\r\n        expect(user).toBe(null!);\r\n        count = count + 1;\r\n        mockAuthState.next(firebaseUser);\r\n      } else {\r\n        expect(user).toEqual(firebaseUser);\r\n        subs.unsubscribe();\r\n        done();\r\n      }\r\n    }, done, done.fail);\r\n    mockAuthState.next(null!);\r\n  });\r\n\r\n  it('should emit auth updates through idToken', (done: any) => {\r\n    let count = 0;\r\n\r\n    // Check that the first value is null and second is the auth user\r\n    const subs = afAuth.idToken.subscribe(user => {\r\n      if (count === 0) {\r\n        expect(user).toBe(null!);\r\n        count = count + 1;\r\n        mockAuthState.next(firebaseUser);\r\n      } else {\r\n        expect(user).toEqual(firebaseUser);\r\n        subs.unsubscribe();\r\n        done();\r\n      }\r\n    }, done, done.fail);\r\n    mockAuthState.next(null!);\r\n  });\r\n\r\n});\r\n\r\nconst FIREBASE_APP_NAME_TOO = (Math.random() + 1).toString(36).substring(7);\r\n\r\ndescribe('AngularFireAuth with different app', () => {\r\n  let app: FirebaseApp;\r\n  let afAuth: AngularFireAuth;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [\r\n        AngularFireModule.initializeApp(COMMON_CONFIG),\r\n        AngularFireAuthModule\r\n      ],\r\n      providers: [\r\n        { provide: FirebaseAppName, useValue: FIREBASE_APP_NAME_TOO },\r\n        { provide: FirebaseAppConfig, useValue:  COMMON_CONFIG }\r\n      ]\r\n    });\r\n    inject([FirebaseApp, AngularFireAuth], (app_: FirebaseApp, _afAuth: AngularFireAuth) => {\r\n      app = app_;\r\n      afAuth = _afAuth;\r\n    })();\r\n  });\r\n\r\n  afterEach(done => {\r\n    app.delete().then(done, done.fail);\r\n  });\r\n\r\n  describe('<constructor>', () => {\r\n\r\n    it('should be an AngularFireAuth type', () => {\r\n      expect(afAuth instanceof AngularFireAuth).toEqual(true);\r\n    });\r\n\r\n    it('should have an initialized Firebase app', () => {\r\n      expect(afAuth.auth.app).toBeDefined();\r\n      expect(afAuth.auth.app).toEqual(app);\r\n    });\r\n\r\n    it('should have an initialized Firebase app instance member', () => {\r\n      expect(afAuth.auth.app.name).toEqual(FIREBASE_APP_NAME_TOO);\r\n    });\r\n  });\r\n\r\n});\r\n"]}