{"version":3,"file":"fromRef.js","sourceRoot":"","sources":["../../../../../src/firestore/observable/fromRef.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAI7C,OAAO,uBAAuB,CAAC;AAC/B,OAAO,yBAAyB,CAAC;AAEjC,kBAAwB,GAAiB;IACvC,MAAM,CAAC,IAAI,UAAU,CAAC,UAAU;QAC9B,MAAM,WAAW,GAAG,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC/C,MAAM,CAAC,EAAE,WAAW,EAAE,CAAC;KACxB,CAAC,CAAC;CACJ;AAED,MAAM,kBAAqB,GAA8B;IACvD,MAAM,CAAC,QAAQ,CAAgB,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;CAC7C;AAED,MAAM,qBAAqB,GAAsB;IAC/C,MAAM,CAAC,OAAO,CAAmB,GAAG,CAAC;SAClC,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;CACjD;AAED,MAAM,4BAA4B,GAAU;IAC1C,MAAM,CAAC,OAAO,CAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAA;CAChF","sourcesContent":["import { DocumentReference, Query, QuerySnapshot, DocumentSnapshot } from '@firebase/firestore-types';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { Action, Reference } from '../interfaces';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/share';\r\n\r\nfunction _fromRef<T, R>(ref: Reference<T>): Observable<R> {\r\n  return new Observable(subscriber => {\r\n    const unsubscribe = ref.onSnapshot(subscriber);\r\n    return { unsubscribe };\r\n  });\r\n}\r\n\r\nexport function fromRef<R>(ref: DocumentReference | Query) {\r\n  return _fromRef<typeof ref, R>(ref).share();\r\n}\r\n\r\nexport function fromDocRef(ref: DocumentReference): Observable<Action<DocumentSnapshot>>{\r\n  return fromRef<DocumentSnapshot>(ref)\r\n    .map(payload => ({ payload, type: 'value' }));\r\n}\r\n\r\nexport function fromCollectionRef(ref: Query): Observable<Action<QuerySnapshot>> {\r\n  return fromRef<QuerySnapshot>(ref).map(payload => ({ payload, type: 'query' }))\r\n}\r\n"]}